services:
  db_service:
    image: postgres:16
    volumes: 
      - postgres_data:/var/lib/postgresql/data/
    environment:
        - POSTGRES_DB=${POSTGRES_DB}  # Adicionado banco, usu√°rio e senha
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}  # Isso permite acesso sem senha
    ports:
      - "${DB_PORT}:5432"
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  app_service:
    build: .
    container_name: spring_app
    ports:
      - "${SPRING_PORT}:8080"
    depends_on:
      - db_service
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
      
volumes:
  postgres_data:

networks:
  app-net:
